{"version":3,"file":"js/538.17e00acf.js","mappings":"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","sources":["webpack://cool_ore/../../../src/components/VExpansionPanel/VExpansionPanels.tsx","webpack://cool_ore/../../../src/components/VExpansionPanel/VExpansionPanelTitle.tsx","webpack://cool_ore/../../../src/components/VExpansionPanel/VExpansionPanelText.tsx","webpack://cool_ore/../../../src/components/VExpansionPanel/VExpansionPanel.tsx","webpack://cool_ore/./src/views/HomeView.vue","webpack://cool_ore/./src/views/HomeView.vue?1da1"],"sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\n// Types\nimport type { GroupItemProvide } from '@/composables/group'\nimport type { InjectionKey, PropType } from 'vue'\n\nexport const VExpansionPanelSymbol: InjectionKey<GroupItemProvide> = Symbol.for('vuetify:v-expansion-panel')\n\nconst allowedVariants = ['default', 'accordion', 'inset', 'popout'] as const\n\ntype Variant = typeof allowedVariants[number]\n\nexport const VExpansionPanels = defineComponent({\n  name: 'VExpansionPanels',\n\n  props: {\n    color: String,\n    variant: {\n      type: String as PropType<Variant>,\n      default: 'default',\n      validator: (v: any) => allowedVariants.includes(v),\n    },\n    readonly: Boolean,\n\n    ...makeGroupProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    useGroup(props, VExpansionPanelSymbol)\n\n    const { themeClasses } = provideTheme(props)\n\n    const variantClass = computed(() => props.variant && `v-expansion-panels--variant-${props.variant}`)\n\n    provideDefaults({\n      VExpansionPanel: {\n        color: toRef(props, 'color'),\n      },\n      VExpansionPanelTitle: {\n        readonly: toRef(props, 'readonly'),\n      },\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-expansion-panels',\n          themeClasses.value,\n          variantClass.value,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VExpansionPanels = InstanceType<typeof VExpansionPanels>\n","// Components\nimport { VExpansionPanelSymbol } from './VExpansionPanels'\nimport { VIcon } from '@/components/VIcon'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useBackgroundColor } from '@/composables/color'\n\n// Utilities\nimport { computed, inject } from 'vue'\nimport { defineComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVExpansionPanelTitleProps = propsFactory({\n  color: String,\n  expandIcon: {\n    type: IconValue,\n    default: '$expand',\n  },\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse',\n  },\n  hideActions: Boolean,\n  ripple: {\n    type: [Boolean, Object],\n    default: false,\n  },\n  readonly: Boolean,\n}, 'v-expansion-panel-title')\n\nexport const VExpansionPanelTitle = defineComponent({\n  name: 'VExpansionPanelTitle',\n\n  directives: { Ripple },\n\n  props: {\n    ...makeVExpansionPanelTitleProps(),\n  },\n\n  setup (props, { slots }) {\n    const expansionPanel = inject(VExpansionPanelSymbol)\n\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-title needs to be placed inside v-expansion-panel')\n\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(props, 'color')\n\n    const slotProps = computed(() => ({\n      collapseIcon: props.collapseIcon,\n      disabled: expansionPanel.disabled.value,\n      expanded: expansionPanel.isSelected.value,\n      expandIcon: props.expandIcon,\n      readonly: props.readonly,\n    }))\n\n    useRender(() => (\n      <button\n        class={[\n          'v-expansion-panel-title',\n          {\n            'v-expansion-panel-title--active': expansionPanel.isSelected.value,\n          },\n          backgroundColorClasses.value,\n        ]}\n        style={ backgroundColorStyles.value }\n        type=\"button\"\n        tabindex={ expansionPanel.disabled.value ? -1 : undefined }\n        disabled={ expansionPanel.disabled.value }\n        aria-expanded={ expansionPanel.isSelected.value }\n        onClick={ !props.readonly ? expansionPanel.toggle : undefined }\n        v-ripple={ props.ripple }\n      >\n        <span class=\"v-expansion-panel-title__overlay\" />\n\n        { slots.default?.(slotProps.value) }\n\n        { !props.hideActions && (\n          <span class=\"v-expansion-panel-title__icon\">\n            {\n              slots.actions ? slots.actions(slotProps.value)\n              : <VIcon icon={ expansionPanel.isSelected.value ? props.collapseIcon : props.expandIcon } />\n            }\n          </span>\n        ) }\n      </button>\n    ))\n\n    return {}\n  },\n})\n\nexport type VExpansionPanelTitle = InstanceType<typeof VExpansionPanelTitle>\n","// Components\nimport { VExpandTransition } from '@/components/transitions'\nimport { VExpansionPanelSymbol } from './VExpansionPanels'\n\n// Composables\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\n\n// Utilities\nimport { defineComponent, useRender } from '@/util'\nimport { inject } from 'vue'\n\nexport const VExpansionPanelText = defineComponent({\n  name: 'VExpansionPanelText',\n\n  props: {\n    ...makeLazyProps(),\n  },\n\n  setup (props, { slots }) {\n    const expansionPanel = inject(VExpansionPanelSymbol)\n\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-text needs to be placed inside v-expansion-panel')\n\n    const { hasContent, onAfterLeave } = useLazy(props, expansionPanel.isSelected)\n\n    useRender(() => (\n      <VExpandTransition onAfterLeave={ onAfterLeave }>\n        <div\n          class=\"v-expansion-panel-text\"\n          v-show={ expansionPanel.isSelected.value }\n        >\n          { slots.default && hasContent.value && (\n            <div class=\"v-expansion-panel-text__wrapper\">\n              { slots.default?.() }\n            </div>\n          ) }\n        </div>\n      </VExpandTransition>\n    ))\n\n    return {}\n  },\n})\n\nexport type VExpansionPanelText = InstanceType<typeof VExpansionPanelText>\n","// Components\nimport { makeVExpansionPanelTitleProps, VExpansionPanelTitle } from './VExpansionPanelTitle'\nimport { VExpansionPanelSymbol } from './VExpansionPanels'\nimport { VExpansionPanelText } from './VExpansionPanelText'\n\n// Composables\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeLazyProps } from '@/composables/lazy'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { useBackgroundColor } from '@/composables/color'\n\n// Utilities\nimport { computed, provide } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\nexport const VExpansionPanel = defineComponent({\n  name: 'VExpansionPanel',\n\n  props: {\n    title: String,\n    text: String,\n    bgColor: String,\n\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeLazyProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeVExpansionPanelTitleProps(),\n  },\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const groupItem = useGroupItem(props, VExpansionPanelSymbol)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(props, 'bgColor')\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const isDisabled = computed(() => groupItem?.disabled.value || props.disabled)\n\n    const selectedIndices = computed(() => groupItem.group.items.value.reduce<number[]>((arr, item, index) => {\n      if (groupItem.group.selected.value.includes(item.id)) arr.push(index)\n      return arr\n    }, []))\n\n    const isBeforeSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id)\n      return !groupItem.isSelected.value &&\n        selectedIndices.value.some(selectedIndex => selectedIndex - index === 1)\n    })\n\n    const isAfterSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id)\n      return !groupItem.isSelected.value &&\n        selectedIndices.value.some(selectedIndex => selectedIndex - index === -1)\n    })\n\n    provide(VExpansionPanelSymbol, groupItem)\n\n    useRender(() => {\n      const hasText = !!(slots.text || props.text)\n      const hasTitle = !!(slots.title || props.title)\n\n      return (\n        <props.tag\n          class={[\n            'v-expansion-panel',\n            {\n              'v-expansion-panel--active': groupItem.isSelected.value,\n              'v-expansion-panel--before-active': isBeforeSelected.value,\n              'v-expansion-panel--after-active': isAfterSelected.value,\n              'v-expansion-panel--disabled': isDisabled.value,\n            },\n            roundedClasses.value,\n            backgroundColorClasses.value,\n          ]}\n          style={ backgroundColorStyles.value }\n          aria-expanded={ groupItem.isSelected.value }\n        >\n          <div\n            class={[\n              'v-expansion-panel__shadow',\n              ...elevationClasses.value,\n            ]}\n          />\n\n          { hasTitle && (\n            <VExpansionPanelTitle\n              key=\"title\"\n              collapseIcon={ props.collapseIcon }\n              color={ props.color }\n              expandIcon={ props.expandIcon }\n              hideActions={ props.hideActions }\n              ripple={ props.ripple }\n            >\n              { slots.title ? slots.title() : props.title }\n            </VExpansionPanelTitle>\n          ) }\n\n          { hasText && (\n            <VExpansionPanelText key=\"text\" eager={ props.eager }>\n              { slots.text ? slots.text() : props.text }\n            </VExpansionPanelText>\n          ) }\n\n          { slots.default?.() }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VExpansionPanel = InstanceType<typeof VExpansionPanel>\n","<template>\n  <div class=\"home\">\n    <section class=\"home__intro\">\n      <div class=\"home__content\">\n        <h2>Carefully Programmed to help better Color Vision</h2>\n        <p>\n          A Capstone Research Project implemented in used to support and spread\n          awareness to Color Vision Deficiency. Cool-ore guides and provides\n          color parameters to see betterment for Website users.\n        </p>\n      </div>\n      <div class=\"home__design\">\n        <img :src=\"require('@/assets/design/color_fountain.png')\" />\n      </div>\n    </section>\n    <section class=\"home__info\">\n      <h3>Want to test and understand all colors more clearly?</h3>\n      <p>\n        Use the website to change colors that are hard to figure out into colors\n        you can easily distinguish. It'll be as easy for you to spot an orange\n        bloom in a green field as it is for everyone else!\n      </p>\n    </section>\n\n    <section class=\"home__video\">\n      <v-card class=\"home__video-card\">\n        <div class=\"home__video-container\">\n          <iframe\n            src=\"https://drive.google.com/file/d/1_ubgEdoyopREBV-ZRIUpS_wJBl18r1VK/preview\"\n            allow=\"autoplay\"\n            allowfullscreen\n          ></iframe>\n        </div>\n\n        <div class=\"home__video-content\">\n          <v-card-title class=\"ma-0 pa-0\" style=\"font-size: 1rem\"\n            >Color Design</v-card-title\n          >\n          <v-spacer></v-spacer>\n          <v-btn icon elevation=\"0\">\n            <v-icon>mdi-information</v-icon>\n          </v-btn>\n        </div>\n      </v-card>\n    </section>\n\n    <section class=\"home__info\">\n      <h3>What is Cool-ore?</h3>\n      <p>\n        An easy navigational website that shows how people with color vision\n        deficiency locks into their vision and must comprehend better with it.\n      </p>\n    </section>\n\n    <section class=\"home__faq\">\n      <h3>Frequently Asked Question</h3>\n      <div class=\"home__vision-types\">\n        <span class=\"home__title\">Vision Types</span>\n        <v-expansion-panels class=\"home__panels\" variant=\"inset\">\n          <v-expansion-panel\n            v-for=\"(typeClr, i) in state.colorblind.visionTypes\"\n            :key=\"i\"\n            :title=\"typeClr.name\"\n            :text=\"typeClr.desc\"\n          >\n          </v-expansion-panel>\n        </v-expansion-panels>\n      </div>\n      <div class=\"home__vision-subtypes\">\n        <span class=\"home__title\">Vision Subtypes</span>\n        <v-expansion-panels class=\"home__panels\" variant=\"inset\">\n          <v-expansion-panel\n            v-for=\"(subTypeClr, i) in state.colorblind.visionSubtypes\"\n            :key=\"i\"\n            :title=\"subTypeClr.name\"\n            :text=\"subTypeClr.desc\"\n          >\n          </v-expansion-panel>\n        </v-expansion-panels>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRoute } from \"vue-router\";\n\n// Components\n\nexport default defineComponent({\n  name: \"HomeView\",\n\n  components: {},\n\n  setup() {\n    const { state, commit, dispatch } = useStore();\n    const router = useRoute();\n    // dispatch(\"generateToken\", { routename: router.name });\n\n    function textToSpeech(e) {\n      commit(\"textToSpeech/textToSpeech\", {\n        event: e,\n      });\n    }\n\n    function handleDialog(e) {\n      commit(\"textToSpeech/handleDialog\", { event: e });\n    }\n\n    return {\n      textToSpeech,\n      handleDialog,\n      state,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\">\n.v-expansion-panel {\n  background-color: var(--primary-color-200);\n  color: var(--secondary-color);\n}\n.home {\n  // For the Navigation Thingy\n  padding-top: var(--header-height);\n  margin: 2rem 2rem 1rem;\n  @include flex($dir: column, $gap: 3rem);\n\n  &__intro {\n    height: var(--main-height);\n    display: grid;\n    grid-template-rows: 25rem 1fr;\n    grid-template-columns: 1fr;\n    align-items: center;\n    justify-items: center;\n  }\n\n  &__design {\n    align-self: end;\n    justify-self: end;\n    grid-column: 1;\n    grid-row: 1;\n    width: 15rem;\n    opacity: 0.15;\n  }\n\n  &__video {\n    @include flex($dir: column);\n    width: 100%;\n    height: clamp(15rem, 60vw, 26rem);\n\n    &-card {\n      @include flex($dir: column);\n      width: clamp(15rem, 70vw, 100rem);\n      max-width: 40rem;\n    }\n\n    &-container {\n      width: 100%;\n      iframe {\n        width: 100%;\n        height: clamp(10rem, 50vw, 20rem);\n      }\n    }\n\n    &-content {\n      @include flex($justify: space-between);\n      width: 100%;\n      padding: 0 2rem;\n    }\n  }\n\n  &__faq {\n    @include flex($dir: column, $gap: 3rem, $align: space-between);\n    padding: 1rem 0;\n\n    h3 {\n      @include font(1.5rem, $weight: 600, $clr: var(--secondary-color));\n      text-align: center;\n    }\n  }\n\n  &__vision-types,\n  &__vision-subtypes {\n    @include flex($dir: column, $gap: 1rem, $align: space-between);\n    span {\n      @include font(1rem, $weight: 600, $clr: var(--secondary-color));\n    }\n  }\n\n  &__panels {\n    background-color: var(--primary-color);\n    color: var(--secondary-color);\n  }\n\n  &__content {\n    max-width: 30rem;\n\n    grid-row: 1 / 3;\n    grid-column: 1;\n    // align-self: start;\n    justify-self: start;\n    h2 {\n      @include font(\n        clamp(2rem, 10vw, 3rem),\n        $weight: 700,\n        $clr: var(--secondary-color)\n      );\n    }\n\n    @include flex(\n      $dir: column,\n      $align: flex-start,\n      $justify: space-between,\n      $gap: 1rem\n    );\n\n    span {\n      @include font(\n        clamp(0.95rem, 2vw, 1rem),\n        $weight: 300,\n        $clr: var(--secondary-color)\n      );\n    }\n\n    h1 {\n      @include font(\n        clamp(2.5rem, 5vw, 4rem),\n        $weight: 800,\n        $clr: var(--secondary-color)\n      );\n    }\n\n    p {\n      @include font(\n        clamp(0.95rem, 1.5vw, 1rem),\n        $weight: 400,\n        $clr: var(--secondary-color)\n      );\n      line-height: 1.5;\n    }\n  }\n\n  &__info {\n    background-color: var(--primary-color-200);\n    border-radius: 0.5rem;\n    padding: 2rem;\n  }\n\n  &__img {\n    width: 14rem;\n    width: clamp(15rem, 35vw, 20rem);\n  }\n\n  &__dialog {\n    width: 25rem;\n  }\n}\n\n@media (min-width: $min-width-tablet) {\n  .home {\n    &__intro {\n      grid-template-columns: 1fr 1fr;\n      grid-template-rows: 1fr;\n    }\n\n    &__content {\n      max-width: 40rem;\n      grid-row: 1 / 3;\n      align-self: center;\n      h2 {\n        @include font(\n          clamp(2.5rem, 5vw, 3.5rem),\n          $weight: 700,\n          $clr: var(--secondary-color)\n        );\n      }\n    }\n\n    &__faq {\n      h3 {\n        text-align: start;\n      }\n    }\n\n    &__info {\n      padding: 3rem;\n    }\n\n    &__design {\n      grid-row: 1 / 3;\n\n      align-self: center;\n      justify-self: center;\n      grid-column: auto;\n      // width: 24rem;\n      width: clamp(18rem, 40vw, 24rem);\n      opacity: 0.75;\n    }\n  }\n}\n// @media (min-width: $min-width-desktop) {\n//   .home {\n//   }\n// }\n</style>\n","import { render } from \"./HomeView.vue?vue&type=template&id=65a634d8\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=65a634d8&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\Vincent\\\\Desktop\\\\Research\\\\cool-ore-beta\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["VExpansionPanelSymbol","Symbol","for","allowedVariants","VExpansionPanels","defineComponent","name","props","color","String","variant","type","default","validator","v","includes","readonly","Boolean","makeGroupProps","makeTagProps","makeThemeProps","emits","val","setup","slots","useGroup","themeClasses","provideTheme","variantClass","computed","provideDefaults","VExpansionPanel","toRef","VExpansionPanelTitle","useRender","value","makeVExpansionPanelTitleProps","propsFactory","expandIcon","IconValue","collapseIcon","hideActions","ripple","Object","directives","Ripple","expansionPanel","inject","Error","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","slotProps","disabled","expanded","isSelected","undefined","toggle","_slots$default","actions","VExpansionPanelText","makeLazyProps","hasContent","onAfterLeave","useLazy","title","text","bgColor","makeElevationProps","makeGroupItemProps","makeRoundedProps","groupItem","useGroupItem","elevationClasses","useElevation","roundedClasses","useRounded","isDisabled","selectedIndices","group","items","reduce","arr","item","index","selected","id","push","isBeforeSelected","findIndex","some","selectedIndex","isAfterSelected","provide","hasText","hasTitle","eager","class","_createElementVNode","src","allow","allowfullscreen","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","require","_hoisted_6","_hoisted_7","_createVNode","_component_v_card","_hoisted_8","_hoisted_9","_component_v_card_title","style","_component_v_spacer","_component_v_btn","icon","elevation","_component_v_icon","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_component_v_expansion_panels","_Fragment","_ctx","colorblind","visionTypes","typeClr","i","_createBlock","_component_v_expansion_panel","key","desc","_hoisted_15","_hoisted_16","visionSubtypes","subTypeClr","components","state","commit","dispatch","useStore","useRoute","textToSpeech","e","event","handleDialog","__exports__","render"],"sourceRoot":""}